<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>autoScrollOutput</key>
	<true/>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string>#!/usr/bin/env sh

# Run a script and present the output in the helper view.
# If TM_PYTHON_VENV exists it will be taken as the base path to a virtual environment that will be activated before running the script. 

# Activate the virtualenv if requested by environment or .tm_properties
ACTIVATE="${TM_PYTHON_VENV}/bin/activate"
[[ -f "${ACTIVATE}" ]] &amp;&amp; . "${ACTIVATE}"

/usr/bin/env ruby18 &lt;&lt;-EORUBY

require ENV["TM_SUPPORT_PATH"] + "/lib/tm/executor"
require ENV["TM_SUPPORT_PATH"] + "/lib/tm/save_current_document"

TextMate.save_if_untitled('py')
TextMate::Executor.make_project_master_current_document

# ENV["PYTHONPATH"] = ENV["TM_BUNDLE_SUPPORT"] + (ENV.has_key?("PYTHONPATH") ? ":" + ENV["PYTHONPATH"] : "")


TextMate::Executor.run(ENV["TM_PYTHON"] || "python", "-u", ENV["TM_FILEPATH"], :create_error_pipe =&gt; true, :use_hashbang =&gt; !ENV.has_key?('TM_PYTHON'))
EORUBY</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>~@r</string>
	<key>name</key>
	<string>Run Script</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>scope</key>
	<string>source.python</string>
	<key>semanticClass</key>
	<string>process.run.script.python</string>
	<key>uuid</key>
	<string>D1C3D420-2DC5-4C61-9586-00E76A6C054B</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
